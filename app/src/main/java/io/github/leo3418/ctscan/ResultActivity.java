package io.github.leo3418.ctscan;

import android.content.DialogInterface;
import android.content.Intent;
import android.net.Uri;
import android.support.v7.app.AlertDialog;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.support.v7.widget.Toolbar;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.widget.TextView;

public class ResultActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        // Automatically generated by Android Studio
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_result);
        // Create a tool bar
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
        // Add a "Back" button
        getSupportActionBar().setDisplayHomeAsUpEnabled(true);

        // Get the previous activity
        Intent intent = getIntent();
        // Retrieve data from previous activity
        int[] voxel = intent.getIntArrayExtra(MainActivity.VOXEL);
        // Define a new object from "CTscan" class
        CTscan input = new CTscan();
        // Specify the instance variable of the object
        input.setVoxel(voxel);
        // Specify TextView objects in GUI which will display output
        TextView horizontal02 = (TextView) findViewById(R.id.horizontal02);
        TextView horizontal13 = (TextView) findViewById(R.id.horizontal13);

        TextView topleft_bottomright02 = (TextView) findViewById(R.id.topleft_bottomright02);
        TextView topleft_bottomright13 = (TextView) findViewById(R.id.topleft_bottomright13);

        TextView vertical02 = (TextView) findViewById(R.id.vertical02);
        TextView vertical13 = (TextView) findViewById(R.id.vertical13);

        TextView topright_bottomleft02 = (TextView) findViewById(R.id.topright_bottomleft02);
        TextView topright_bottomleft13 = (TextView) findViewById(R.id.topright_bottomleft13);

        TextView overall02 = (TextView) findViewById(R.id.overall02);
        TextView overall13 = (TextView) findViewById(R.id.overall13);

        TextView background02 = (TextView) findViewById(R.id.background02);
        TextView background13 = (TextView) findViewById(R.id.background13);

        TextView result02 = (TextView) findViewById(R.id.result02);
        TextView result13 = (TextView) findViewById(R.id.result13);

        // Get outputs from the "CTscan" class and apply them to TextView objects above
        horizontal02.setText(String.valueOf(input.getHorizontal()[0]) + "\n" + String.valueOf(input.getHorizontal()[2]));
        horizontal13.setText(String.valueOf(input.getHorizontal()[1]) + "\n" + String.valueOf(input.getHorizontal()[3]));

        topleft_bottomright02.setText(String.valueOf(input.getTopleft_Bottomright()[0]) + "\n" + String.valueOf(input.getTopleft_Bottomright()[2]));
        topleft_bottomright13.setText(String.valueOf(input.getTopleft_Bottomright()[1]) + "\n" + String.valueOf(input.getTopleft_Bottomright()[3]));

        vertical02.setText(String.valueOf(input.getVertical()[0]) + "\n" + String.valueOf(input.getVertical()[2]));
        vertical13.setText(String.valueOf(input.getVertical()[1]) + "\n" + String.valueOf(input.getVertical()[3]));

        topright_bottomleft02.setText(String.valueOf(input.getTopright_Bottomleft()[0]) + "\n" + String.valueOf(input.getTopright_Bottomleft()[2]));
        topright_bottomleft13.setText(String.valueOf(input.getTopright_Bottomleft()[1]) + "\n" + String.valueOf(input.getTopright_Bottomleft()[3]));

        overall02.setText(String.valueOf(input.getOverall()[0]) + "\n" + String.valueOf(input.getOverall()[2]));
        overall13.setText(String.valueOf(input.getOverall()[1]) + "\n" + String.valueOf(input.getOverall()[3]));

        background02.setText(String.valueOf(input.getBackground()[0]) + "\n" + String.valueOf(input.getBackground()[2]));
        background13.setText(String.valueOf(input.getBackground()[1]) + "\n" + String.valueOf(input.getBackground()[3]));

        result02.setText(String.valueOf(input.getResult()[0]) + "\n" + String.valueOf(input.getResult()[2]));
        result13.setText(String.valueOf(input.getResult()[1]) + "\n" + String.valueOf(input.getResult()[3]));
    }

    // Create a menu
    public boolean onCreateOptionsMenu(Menu menu) {
        MenuInflater inflater = getMenuInflater();
        inflater.inflate(R.menu.menu, menu);
        return true;
    }

    // This method is called when user clicks items in menu
    public boolean onOptionsItemSelected(MenuItem item){
        switch(item.getItemId()){
            // When the user clicks "About"
            case R.id.about:
                // Construct a dialog box
                AlertDialog.Builder about = new AlertDialog.Builder(this);
                // Construct "Go to GitHub" button
                about.setNeutralButton(R.string.goto_GitHub, new DialogInterface.OnClickListener(){
                    public void onClick(DialogInterface dialog, int id){
                        // Visit GitHub
                        dialog.dismiss();
                        String url = "https://github.com/Leo3418/CTScan";
                        Intent goto_GitHub = new Intent(Intent.ACTION_VIEW);
                        goto_GitHub.setData(Uri.parse(url));
                        startActivity(goto_GitHub);
                    }
                });
                // Construct an "OK" button
                about.setPositiveButton(R.string.ok, new DialogInterface.OnClickListener(){
                    public void onClick(DialogInterface dialog, int id){
                        // When the user clicks the "OK" button, the dialog disappears
                        dialog.dismiss();
                    }
                });
                // Define the title of the dialog box
                about.setTitle(R.string.about);
                // Define the message of the dialog box
                about.setMessage(R.string.about_message);
                // Display "About" box
                about.show();
                return true;
            default:
                return super.onOptionsItemSelected(item);
        }
    }
}

